{"version":3,"sources":["http-common.js","services/Songs-Service.js","components/AddSong-Component.js","components/SongsList-Component.js","components/Card.js","components/Song-Component.js","App.js","index.js"],"names":["axios","create","baseURL","headers","http","get","data","post","title","id","delete","put","AddSong","props","onChangeTitle","bind","onChangeDescription","onChangePublishedOn","onChangeDuration","anotherSong","saveSong","state","description","publishedOn","duration","submitted","e","this","setState","target","value","SongsDataService","then","response","console","log","catch","className","onClick","htmlFor","type","required","onChange","placeholder","name","rows","pattern","Component","SongsList","onChangeSearchTitle","retrieveSongs","refreshList","searchTitle","deleteSong","songs","getAll","findByTitle","style","tableLayout","scope","width","map","song","index","to","color","Card","edit","editFunction","updateSong","handleInputChange","margin","aria-describedby","role","aria-label","whiteSpace","Song","retrieveSong","editSong","match","params","update","finally","event","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28a00411.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// For deployment baseURL: \"https://sproner.herokuapp.com/api\",\r\n// For local:   baseURL: \"http://localhost:8080/api\"\r\n//  curl -vL square.github.io/okhttp 2>&1 | fgrep -i access-control-allow-origin\r\nexport default axios.create({\r\n    baseURL: \"https://sproner.herokuapp.com/api\",\r\n    headers: {\r\n        \"Content-type\" : \"application/json\"\r\n    }\r\n});","import http from \"../http-common\";\r\n\r\nclass SongsDataService{\r\n    getAll(){\r\n        return http.get('/song');\r\n    }\r\n    create(data){\r\n        return http.post('/song', data);\r\n    }\r\n    findByTitle(title){\r\n        return http.get(`/song?title=${title}`);\r\n    }\r\n    delete(id){\r\n        return http.delete(`/song/${id}`);\r\n    }\r\n    get(id){\r\n        return http.get(`/song/${id}`);\r\n    }\r\n    update(id,data){\r\n        return http.put(`/song/${id}`,data);\r\n    }\r\n\r\n}\r\n\r\nexport default new SongsDataService();","import React, { Component } from \"react\";\r\nimport SongsDataService from \"../services/Songs-Service\";\r\n\r\n/*\r\n\r\nhttps://programacion.net/articulo/bootstrap_datetimepicker-_o_como_anadir_un_calendario_a_un_campo_input_1796\r\n\r\n*/\r\n\r\nexport default class AddSong extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangePublishedOn = this.onChangePublishedOn.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n        this.anotherSong = this.anotherSong.bind(this);\r\n        this.saveSong = this.saveSong.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            publishedOn: \"\",\r\n            duration: \"\",\r\n\r\n            submitted: false\r\n        }\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePublishedOn(e){\r\n        this.setState({\r\n            publishedOn: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDuration(e){\r\n        this.setState({\r\n            duration: e.target.value\r\n        })\r\n    }\r\n\r\n    anotherSong(){\r\n        this.setState({\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            publishedOn: \"\",\r\n            duration: \"\",\r\n            \r\n            submitted: false\r\n        })\r\n    }\r\n\r\n    saveSong(){\r\n        var data ={\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            publishedOn: this.state.publishedOn,\r\n            duration: this.state.duration\r\n        }\r\n        SongsDataService.create(data).then( response =>{\r\n            this.setState({\r\n                id: response.data.id,\r\n                title: response.data.title,\r\n                description: response.data.description,\r\n                publishedOn: response.data.publishedOn,\r\n                duration: response.data.duration,\r\n\r\n                submitted:true\r\n            })\r\n            console.log(response.data)\r\n        }).catch( e =>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"submit-form\">\r\n                {\r\n                    this.state.submitted ? (\r\n                    <div>\r\n                        <h4> You have submitted succesfully!</h4>\r\n                        <button className=\"btn btn-success\" onClick={this.anotherSong}>\r\n                            Add another\r\n                        </button>\r\n                    </div>\r\n                    ) : (\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title of the song:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                            id=\"title\" required value={this.state.title}\r\n                            onChange={this.onChangeTitle}\r\n                            placeholder=\"Write the song's title\"\r\n                            name=\"title\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Lyrics:</label>\r\n                            <textarea className=\"form-control\" id=\"descripcion\"\r\n                             required value={this.state.description}\r\n                             onChange={this.onChangeDescription}\r\n                             name=\"description\" rows=\"3\"\r\n                             placeholder=\"Write the song's lyrics\"\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"publishedOn\">Published on (yyyy-mm):</label>\r\n                            <input className=\"form-control\" type=\"month\" \r\n                            id=\"publishedOn\" name=\"publishedOn\" \r\n                            pattern=\"[0-9]{4}-[0-9]{2}\"\r\n                            value={this.state.publishedOn}\r\n                            onChange={this.onChangePublishedOn}\r\n                            placeholder=\"2012-10\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"duration\">Duration (hh:mm:ss):</label>\r\n                            <input className=\"form-control\" type=\"text\" \r\n                            id=\"duration\" name=\"duration\" \r\n                            pattern=\"([0-9]{2}:)?[0-9]{2}:[0-9]{2}\"\r\n                            value={this.state.duration}\r\n                            onChange={this.onChangeDuration}\r\n                            placeholder=\"00:03:30\"\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success\" onClick={this.saveSong}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport SongsDataService from \"../services/Songs-Service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\n\r\n/*\r\nhttps://bezkoder.com/react-material-ui-examples-crud/\r\nhttps://bezkoder.com/react-crud-web-api/\r\nhttps://bezkoder.com/react-table-example-hooks-crud/\r\n\r\n*/\r\n\r\nexport default class SongsList extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n        this.retrieveSongs = this.retrieveSongs.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.searchTitle = this.searchTitle.bind(this);\r\n        this.deleteSong = this.deleteSong.bind(this);\r\n        this.state = {\r\n            songs: [],\r\n            searchTitle: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.retrieveSongs();\r\n    }\r\n\r\n    deleteSong(id){\r\n        SongsDataService.delete(id)\r\n        .then( response => {\r\n            console.log(response.data);\r\n            this.refreshList();\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    retrieveSongs(){\r\n        SongsDataService.getAll()\r\n        .then(response => {\r\n          console.log(\"Se invoco de nuevo el obtener los songs\");\r\n          this.setState({\r\n            songs: response.data\r\n          });\r\n          console.log(response.data);\r\n          console.log(\"Esos fueron los datos de los songs\");\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n\r\n    refreshList(){\r\n        this.retrieveSongs();\r\n    }\r\n\r\n    onChangeSearchTitle(e) {\r\n        const searchTitle = e.target.value;\r\n        this.setState({\r\n          searchTitle: searchTitle\r\n        });\r\n    }\r\n\r\n    searchTitle() {\r\n        SongsDataService.findByTitle(this.state.searchTitle)\r\n          .then(response => {\r\n            this.setState({\r\n              songs: response.data\r\n            });\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    }\r\n\r\n    render(){\r\n\r\n        const { searchTitle, songs} = this.state;\r\n        \r\n        return (\r\n        <div>\r\n            <div className=\"input-group mb-3\">\r\n                <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search by title\"\r\n                value={searchTitle}\r\n                onChange={this.onChangeSearchTitle}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={this.searchTitle}\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <h4>Songs List</h4>\r\n            {\r\n\r\n            this.state.songs ? (\r\n                <div className=\"table-responsive\"> \r\n                <table className=\"table table-dark table-hover\" style={{tableLayout:\"fixed\"}} >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\" style={{width:\"5%\"}}>#</th>\r\n                        <th scope=\"col\">Song</th>\r\n                        <th scope=\"col\" style={{width:\"35%\"}}>Lyrics</th>\r\n                        <th scope=\"col\">Published on</th>\r\n                        <th scope=\"col\">Duration</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {songs &&\r\n                songs.map((song, index) => (\r\n                    <tr key={index}> \r\n                        <th scope=\"row\"> {index + 1} </th>\r\n                            <td>{song.title}</td>\r\n                            <td className=\"text-truncate\">{song.description}</td>\r\n                            <td>{song.publishedOn}</td>\r\n                            <td>{song.duration}</td>\r\n                            <td>\r\n                            <Link to={\"/songs/\"+song.id} >\r\n                                <i className=\"fas fa-eye fa-2x\" style={{color: \"white\"}} ></i>\r\n                            </Link>\r\n                            <button className=\"btn\" onClick={() => this.deleteSong(song.id)}><i className=\"fa fa-trash fa-2x\" style={{color: \"white\"}}></i></button>\r\n                            </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            ) : (\r\n                <div>\r\n                <h5>Content not found :( </h5>\r\n                <p>You can add more content using add+</p>\r\n                </div>\r\n            )\r\n        }\r\n \r\n        </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Card = props => {\r\n  let { edit, song, editFunction, updateSong, handleInputChange } = props;\r\n\r\n  if (!edit) {\r\n    return (\r\n        <div className=\"card text-center\">\r\n        <h3 className=\"card-header lead text-white bg-dark\" >\r\n                {song.title}\r\n        </h3>\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Lyrics:</h5>\r\n        <p className=\"card-text\">\r\n            <em style={{whiteSpace: \"pre-wrap\"}}>{song.description}</em>\r\n        </p>\r\n        <p className=\"card-text\">\r\n            <strong>Published on:</strong> {song.publishedOn}\r\n        </p>\r\n        <p className=\"card-text\">\r\n            <strong>Duration:</strong> {song.duration}\r\n        </p>\r\n        </div>\r\n        <div className=\"card-footer border-secondary\">\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Song control\">\r\n                <button type=\"button\" className=\"btn btn-outline-danger\">\r\n                    <i className=\"fas fa-trash fa-2x\"></i>                        \r\n                </button>\r\n                <button onClick={editFunction} type=\"button\" className=\"btn btn-outline-success\">\r\n                    <i className=\"fas fa-edit fa-2x\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )} else {\r\n    return (\r\n\r\n<form className=\"card text-center\">\r\n    <div className=\"card-header bg-dark\">\r\n        <label htmlFor=\"songTitle\" className=\"text-center text-white lead\">Title</label>\r\n        <input className=\"form-control w-75\" placeholder=\"Introduce the new song's title\" \r\n        value={song.title} style={{ margin:\"0 auto\"}}\r\n        onChange={handleInputChange}\r\n        id=\"songTitle\" name=\"title\"\r\n        />\r\n    </div>\r\n    <div className=\"card-body\">\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"songLyrics\" className=\"card-title\">New lyrics:</label>\r\n            <textarea className=\"form-control card-text w-75\"\r\n                value={song.description}\r\n                style={{ margin:\"0 auto\" }} rows=\"3\"\r\n                placeholder=\"Add new lyrics or modify the existent!\"\r\n                onChange={handleInputChange}\r\n                id=\"songLyrics\" name=\"description\" \r\n            >\r\n            </textarea>\r\n        </div>\r\n        <div className=\"input-group w-75\" style={{ margin:\"0 auto\" }}>\r\n            <label htmlFor=\"publisheOn\" className=\"input-group-text bg-dark text-white\" id=\"label-published\">Published on (yyyy-mm)</label>\r\n            <input type=\"month\" className=\"form-control\" \r\n            placeholder=\"Update the song release\" aria-describedby=\"label-published\"\r\n            id=\"publishedOn\" name=\"publishedOn\" \r\n            pattern=\"[0-9]{4}-[0-9]{2}\"\r\n            onChange={handleInputChange}\r\n            value={song.publishedOn}\r\n            />\r\n        </div>\r\n        <div className=\"input-group w-75\" style={{ margin:\"0 auto\" }}>\r\n            <label htmlFor=\"duration\" className=\"input-group-text bg-dark text-white\" id=\"label-duration\">Duration (hh:mm:ss)</label>\r\n            <input type=\"text\" className=\"form-control\" \r\n            placeholder=\"Update the song duration\" aria-describedby=\"label-duration\"\r\n            id=\"duration\" name=\"duration\"\r\n            pattern=\"([0-9]{2}:)?[0-9]{2}:[0-9]{2}\"\r\n            onChange={handleInputChange}\r\n            value={song.duration}\r\n            />\r\n        </div>\r\n\r\n        </div>\r\n        <div className=\"card-footer border-secondary\">\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Song control\">\r\n                <button type=\"button\" onClick={editFunction} className=\"btn btn-outline-danger text-center d-flex fa-1x align-self-center\">\r\n                <i className=\"fas fa-undo d-flex align-self-center p-1\"></i>Cancel                        \r\n                </button>\r\n                <button type=\"button\" onClick={updateSong} className=\"btn btn-outline-primary text-center d-flex fa-1x align-self-center\">\r\n                <i className=\"fas fa-upload d-flex align-self-center p-1\"></i>Update                        \r\n                </button>\r\n            </div>\r\n        </div> \r\n</form>\r\n\r\n  )}\r\n};\r\n\r\nexport default Card;","import {Component} from \"react\";\r\nimport SongsDataService from \"../services/Songs-Service\";\r\nimport Card from \"./Card\";\r\n\r\n/*\r\nhttps://stackoverflow.com/questions/23427384/get-form-data-in-reactjs\r\n*/\r\n\r\nexport default class Song extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.retrieveSong = this.retrieveSong.bind(this);\r\n        this.updateSong = this.updateSong.bind(this);\r\n        this.editSong = this.editSong.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            title: null,\r\n            description: null,\r\n            publishedOn: null,\r\n            duration: null,\r\n\r\n            edit:false,\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.retrieveSong(this.state.id);\r\n    }\r\n\r\n    updateSong(){\r\n        const data = {\r\n            id: this.state.id,\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            publishedOn: this.state.publishedOn,\r\n            duration: this.state.duration,\r\n        }\r\n        SongsDataService.update(this.state.id,data).then((response) => {\r\n            console.log(\"La respuesta de la api:\")\r\n            console.log(response.data)\r\n        }).catch((e) => {\r\n            console.log(\"Valio, no se pudo actualizar\")\r\n            console.log(e)\r\n        }).finally(() =>{\r\n            this.retrieveSong(data.id)\r\n            this.setState({\r\n                edit:false\r\n            })\r\n        })\r\n\r\n        /*\r\n        \r\n        console.log(event.target[0].value)\r\n        console.log(event.target.elements.title.value)\r\n        console.log(event.target.title.value)\r\n        console.log(this.state.id)\r\n        */\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    \r\n    }\r\n\r\n    editSong(){\r\n        this.state.edit ? (\r\n            this.setState({\r\n                edit: false\r\n            })\r\n        ) : (\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        )\r\n    }\r\n\r\n    retrieveSong(id){\r\n        SongsDataService.get(id).then( response => {\r\n            this.setState({\r\n                id: response.data.id,\r\n                title: response.data.title,\r\n                description: response.data.description,\r\n                publishedOn: response.data.publishedOn,\r\n                duration: response.data.duration\r\n            });\r\n        }).catch(e => {\r\n            console.log(e);\r\n            console.log(\"No se encontro xd, poner a null lo demas\");\r\n            this.setState({\r\n                id: this.props.match.params.id,\r\n                title: null,\r\n                description: null,\r\n                publishedOn: null,\r\n                duration: null,\r\n\r\n                edit: false,\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let song = this.state;\r\n        return (\r\n        <div>\r\n        {\r\n           (song.title !== null) ? (\r\n               <Card edit={song.edit} song={song} handleInputChange={this.handleInputChange} updateSong={this.updateSong} editFunction={this.editSong} />\r\n           ) : (\r\n               <h2>The song you request doesn't exist!</h2>\r\n           )\r\n        }\r\n        </div>\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\nimport AddSong from './components/AddSong-Component';\r\nimport SongsList from './components/SongsList-Component';\r\nimport Song from './components/Song-Component';\r\n\r\n/* https://www.freecodecamp.org/espanol/news/npm-vs-npx-cual-es-la-diferencia/ \r\n  \r\n https://spring.io/guides/tutorials/react-and-spring-data-rest/\r\n https://bezkoder.com/react-crud-web-api/\r\n \r\n Deployment: \r\n https://www.freecodecamp.org/news/deploy-a-react-app-to-github-pages/\r\nhttps://create-react-app.dev/docs/deployment/#github-pages-https-pagesgithubcom\r\n*/\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/\"} className=\"navbar-brand\">\r\n            Music!\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/songs\"} className=\"nav-link\">\r\n                Songs\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add+\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/songs\"]} component={SongsList} />\r\n            <Route exact path=\"/add\" component={AddSong} />\r\n            <Route path=\"/songs/:id\" component={Song} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}