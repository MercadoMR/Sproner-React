{"version":3,"sources":["http-common.js","services/Songs-Service.js","components/AddSong-Component.js","components/SongsList-Component.js","App.js","index.js"],"names":["axios","create","baseURL","headers","http","get","data","post","title","AddSong","props","onChangeTitle","bind","onChangeDescription","onChangePublishedOn","onChangeDuration","anotherSong","saveSong","state","id","description","publishedOn","duration","submitted","e","this","setState","target","value","SongsDataService","then","response","console","log","catch","className","onClick","htmlFor","type","required","onChange","name","rows","pattern","Component","SongsList","App","to","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ddaefb3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// For deployment baseURL: \"https://sproner.herokuapp.com/api\",\r\n// For local:   baseURL: \"http://localhost:8080/api\"\r\nexport default axios.create({\r\n    baseURL: \"https://sproner.herokuapp.com/api\",\r\n    headers: {\r\n        \"Content-type\" : \"application/json\"\r\n    }\r\n});","import http from \"../http-common\";\r\n\r\nclass SongsDataService{\r\n    getAll(){\r\n        return http.get('/song');\r\n    }\r\n    create(data){\r\n        return http.post('/song', data);\r\n    }\r\n    findByTitle(title){\r\n        return http.get(`/song?title=${title}`);\r\n    }\r\n}\r\n\r\nexport default new SongsDataService();","import React, { Component } from \"react\";\r\nimport SongsDataService from \"../services/Songs-Service\";\r\n\r\n/*\r\n\r\nhttps://programacion.net/articulo/bootstrap_datetimepicker-_o_como_anadir_un_calendario_a_un_campo_input_1796\r\n\r\n*/\r\n\r\nexport default class AddSong extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangePublishedOn = this.onChangePublishedOn.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n        this.anotherSong = this.anotherSong.bind(this);\r\n        this.saveSong = this.saveSong.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            publishedOn: \"\",\r\n            duration: \"\",\r\n\r\n            submitted: false\r\n        }\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangePublishedOn(e){\r\n        this.setState({\r\n            publishedOn: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDuration(e){\r\n        this.setState({\r\n            duration: e.target.value\r\n        })\r\n    }\r\n\r\n    anotherSong(){\r\n        this.setState({\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            publishedOn: \"\",\r\n            duration: \"\",\r\n            \r\n            submitted: false\r\n        })\r\n    }\r\n\r\n    saveSong(){\r\n        var data ={\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            publishedOn: this.state.publishedOn,\r\n            duration: this.state.duration\r\n        }\r\n        SongsDataService.create(data).then( response =>{\r\n            this.setState({\r\n                id: response.data.id,\r\n                title: response.data.title,\r\n                description: response.data.description,\r\n                publishedOn: response.data.publishedOn,\r\n                duration: response.data.duration,\r\n\r\n                submitted:true\r\n            })\r\n            console.log(response.data)\r\n        }).catch( e =>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"submit-form\">\r\n                {\r\n                    this.state.submitted ? (\r\n                    <div>\r\n                        <h4> You have submitted succesfully!</h4>\r\n                        <button className=\"btn btn-success\" onClick={this.anotherSong}>\r\n                            Add another\r\n                        </button>\r\n                    </div>\r\n                    ) : (\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title of the song:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                            id=\"title\" required value={this.state.title}\r\n                            onChange={this.onChangeTitle}\r\n                            name=\"title\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description:</label>\r\n                            <textarea className=\"form-control\" id=\"descripcion\"\r\n                             required value={this.state.description}\r\n                             onChange={this.onChangeDescription}\r\n                             name=\"description\" rows=\"3\"\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"publishedOn\">Published on (yyyy-mm):</label>\r\n                            <input className=\"form-control\" type=\"month\" \r\n                            id=\"publishedOn\" name=\"publishedOn\" \r\n                            pattern=\"[0-9]{4}-[0-9]{2}\"\r\n                            value={this.state.publishedOn}\r\n                            onChange={this.onChangePublishedOn}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"duration\">Duration (hh:mm:ss):</label>\r\n                            <input className=\"form-control\" type=\"text\" \r\n                            id=\"duration\" name=\"duration\" \r\n                            pattern=\"([0-9]{2}:)?[0-9]{2}:[0-9]{2}\"\r\n                            value={this.state.duration}\r\n                            onChange={this.onChangeDuration}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success\" onClick={this.saveSong}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\n\r\nexport default class SongsList extends Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\nimport AddSong from './components/AddSong-Component';\r\nimport SongsList from './components/SongsList-Component';\r\n\r\n/* https://www.freecodecamp.org/espanol/news/npm-vs-npx-cual-es-la-diferencia/ \r\n  \r\n https://spring.io/guides/tutorials/react-and-spring-data-rest/\r\n https://bezkoder.com/react-crud-web-api/\r\n \r\n Deployment: \r\n https://www.freecodecamp.org/news/deploy-a-react-app-to-github-pages/\r\nhttps://create-react-app.dev/docs/deployment/#github-pages-https-pagesgithubcom\r\n*/\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link className=\"navbar-brand\">\r\n            Music!\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/songs\"} className=\"nav-link\">\r\n                Songs\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add+\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/songs\"]} component={SongsList} />\r\n            <Route exact path=\"/add\" component={AddSong} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}