{"version":3,"sources":["http-common.js","services/Songs-Service.js","components/AddSong-Component.js","components/SongsList-Component.js","components/Card.js","components/Song-Component.js","components/Home.js","App.js","index.js"],"names":["axios","create","baseURL","headers","http","get","data","post","title","id","delete","put","AddSong","props","anotherSong","bind","saveSong","handleInputChange","state","description","publishedOn","duration","video","author","submitted","event","target","value","name","this","setState","SongsDataService","then","response","console","log","catch","e","className","onClick","htmlFor","type","required","onChange","placeholder","rows","for","class","pattern","Component","SongsList","onChangeSearchTitle","retrieveSongs","refreshList","searchTitle","deleteSong","songs","getAll","findByTitle","style","tableLayout","scope","width","map","song","index","to","color","Card","edit","editFunction","updateSong","margin","aria-describedby","role","aria-label","whiteSpace","src","split","Fragment","Song","retrieveSong","editSong","match","params","update","finally","NavBar","Home","document","getElementById","App","exact","path","component","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.d09008e0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// For deployment baseURL: \"https://sproner.herokuapp.com/api\",\r\n// For local:   baseURL: \"    baseURL: \"http://localhost:3001/api\",\"\r\nexport default axios.create({\r\n    baseURL: \"https://sproner.herokuapp.com/api\",\r\n    headers: {\r\n        \"Content-type\" : \"application/json\"\r\n    }\r\n});","import http from \"../http-common\";\r\n\r\nclass SongsDataService{\r\n    getAll(){\r\n        return http.get('/song');\r\n    }\r\n    create(data){\r\n        return http.post('/song', data);\r\n    }\r\n    findByTitle(title){\r\n        return http.get(`/song?title=${title}`);\r\n    }\r\n    delete(id){\r\n        return http.delete(`/song/${id}`);\r\n    }\r\n    get(id){\r\n        return http.get(`/song/${id}`);\r\n    }\r\n    update(id,data){\r\n        return http.put(`/song/${id}`,data);\r\n    }\r\n\r\n}\r\n\r\nexport default new SongsDataService();","import React, { Component } from \"react\";\r\nimport SongsDataService from \"../services/Songs-Service\";\r\n\r\n/*\r\n\r\nhttps://programacion.net/articulo/bootstrap_datetimepicker-_o_como_anadir_un_calendario_a_un_campo_input_1796\r\n\r\n*/\r\n\r\nexport default class AddSong extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.anotherSong = this.anotherSong.bind(this);\r\n        this.saveSong = this.saveSong.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            publishedOn: \"\",\r\n            duration: \"\",\r\n            video: \"\",\r\n            author: \"\",\r\n\r\n            submitted: false\r\n        }\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    \r\n    }\r\n    anotherSong(){\r\n        this.setState({\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            publishedOn: \"\",\r\n            duration: \"\",\r\n            video: \"\",\r\n            author: \"\",\r\n            \r\n            submitted: false\r\n        })\r\n    }\r\n\r\n    saveSong(){\r\n        var data ={\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            publishedOn: this.state.publishedOn,\r\n            duration: this.state.duration,\r\n            video: this.state.video,\r\n            author: this.state.author,\r\n        }\r\n        SongsDataService.create(data).then( response =>{\r\n            this.setState({\r\n                id: response.data.id,\r\n                title: response.data.title,\r\n                description: response.data.description,\r\n                publishedOn: response.data.publishedOn,\r\n                duration: response.data.duration,\r\n                video: response.data.video,\r\n                author: response.data.author,\r\n\r\n                submitted:true\r\n            })\r\n            console.log(response.data)\r\n        }).catch( e =>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n<div className=\"container mt-3\">\r\n            <div className=\"submit-form\">\r\n                {\r\n                    this.state.submitted ? (\r\n                    <div>\r\n                        <h4> You have submitted succesfully!</h4>\r\n                        <button className=\"btn btn-success\" onClick={this.anotherSong}>\r\n                            Add another\r\n                        </button>\r\n                    </div>\r\n                    ) : (\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title of the song:</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                            id=\"title\" required value={this.state.title}\r\n                            onChange={this.handleInputChange}\r\n                            placeholder=\"Write the song's title\"\r\n                            name=\"title\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Lyrics:</label>\r\n                            <textarea className=\"form-control\" id=\"descripcion\"\r\n                             required value={this.state.description}\r\n                             onChange={this.handleInputChange}\r\n                             name=\"description\" rows=\"5\"\r\n                             placeholder=\"Write the song's lyrics\"\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                        <label for=\"musicVideo\" class=\"form-label\">Youtube video:</label>\r\n                        <input type=\"url\" class=\"form-control\" name=\"video\" id=\"musicVideo\" \r\n                        value={this.state.video}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"https://www.youtube.com/watch?v=bR6lbN40-Ho\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                        <label for=\"musicSinger\" class=\"form-label\">Singer or band name:</label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"author\" id=\"musicSinger\" \r\n                        value={this.state.author}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"The strokes\"/>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"publishedOn\">Published on (yyyy-mm):</label>\r\n                            <input className=\"form-control\" type=\"month\" \r\n                            id=\"publishedOn\" name=\"publishedOn\" \r\n                            pattern=\"[0-9]{4}-[0-9]{2}\"\r\n                            value={this.state.publishedOn}\r\n                            onChange={this.handleInputChange}\r\n                            placeholder=\"2012-10\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"duration\">Duration (hh:mm:ss):</label>\r\n                            <input className=\"form-control\" type=\"text\" \r\n                            id=\"duration\" name=\"duration\" \r\n                            pattern=\"([0-9]{2}:)?[0-9]{2}:[0-9]{2}\"\r\n                            value={this.state.duration}\r\n                            onChange={this.handleInputChange}\r\n                            placeholder=\"00:03:30\"\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success\" onClick={this.saveSong}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    )\r\n                }\r\n            </div>\r\n</div>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport SongsDataService from \"../services/Songs-Service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\n\r\n/*\r\nhttps://bezkoder.com/react-material-ui-examples-crud/\r\nhttps://bezkoder.com/react-crud-web-api/\r\nhttps://bezkoder.com/react-table-example-hooks-crud/\r\n\r\n*/\r\n\r\nexport default class SongsList extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n        this.retrieveSongs = this.retrieveSongs.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.searchTitle = this.searchTitle.bind(this);\r\n        this.deleteSong = this.deleteSong.bind(this);\r\n        this.state = {\r\n            songs: [],\r\n            searchTitle: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.retrieveSongs();\r\n    }\r\n\r\n    deleteSong(id){\r\n        SongsDataService.delete(id)\r\n        .then( response => {\r\n            console.log(response.data);\r\n            this.refreshList();\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    retrieveSongs(){\r\n        SongsDataService.getAll()\r\n        .then(response => {\r\n          console.log(\"Se invoco de nuevo el obtener los songs\");\r\n          this.setState({\r\n            songs: response.data\r\n          });\r\n          console.log(response.data);\r\n          console.log(\"Esos fueron los datos de los songs\");\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n\r\n    refreshList(){\r\n        this.retrieveSongs();\r\n    }\r\n\r\n    onChangeSearchTitle(e) {\r\n        const searchTitle = e.target.value;\r\n        this.setState({\r\n          searchTitle: searchTitle\r\n        });\r\n    }\r\n\r\n    searchTitle() {\r\n        SongsDataService.findByTitle(this.state.searchTitle)\r\n          .then(response => {\r\n            this.setState({\r\n              songs: response.data\r\n            });\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    }\r\n\r\n    render(){\r\n\r\n        const { searchTitle, songs} = this.state;\r\n        \r\n        return (\r\n    <div className=\"container mt-3\">\r\n            <div className=\"input-group mb-3\">\r\n                <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search by title\"\r\n                value={searchTitle}\r\n                onChange={this.onChangeSearchTitle}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={this.searchTitle}\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <h4>Songs List</h4>\r\n            {\r\n\r\n            this.state.songs ? (\r\n                <div className=\"table-responsive\"> \r\n                <table className=\"table table-dark table-hover\" style={{tableLayout:\"fixed\"}} >\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\" style={{width:\"5%\"}}>#</th>\r\n                        <th scope=\"col\">Song</th>\r\n                        <th scope=\"col\" style={{width:\"35%\"}}>Lyrics</th>\r\n                        <th scope=\"col\">Published on</th>\r\n                        <th scope=\"col\">Duration</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {songs &&\r\n                songs.map((song, index) => (\r\n                    <tr key={index}> \r\n                        <th scope=\"row\"> {index + 1} </th>\r\n                            <td>{song.title}</td>\r\n                            <td className=\"text-truncate\">{song.description}</td>\r\n                            <td>{song.publishedOn}</td>\r\n                            <td>{song.duration}</td>\r\n                            <td>\r\n                            <Link to={\"/songs/\"+song.id} >\r\n                                <i className=\"fas fa-eye fa-2x\" style={{color: \"white\"}} ></i>\r\n                            </Link>\r\n                            </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            ) : (\r\n                <div>\r\n                <h5>Content not found :( </h5>\r\n                <p>You can add more content using add+</p>\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\nconst Card = props => {\r\n  let { edit, song, editFunction, updateSong, handleInputChange } = props;\r\n\r\n  if (!edit) {\r\n    return (\r\n<div className=\"container mt-3\">\r\n        <div className=\"card text-center\">\r\n        <h3 className=\"card-header lead text-white bg-dark\" >\r\n                {song.title}\r\n        </h3>\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Lyrics:</h5>\r\n        <p className=\"card-text\">\r\n            <em style={{whiteSpace: \"pre-wrap\"}}>{song.description}</em>\r\n        </p>\r\n        <p className=\"card-text\">\r\n            <strong>Author:</strong> {song.author}\r\n        </p>\r\n        <p className=\"card-text\">\r\n            <strong>Published on:</strong> {song.publishedOn}\r\n        </p>\r\n        <p className=\"card-text\">\r\n            <strong>Duration:</strong> {song.duration}\r\n        </p>\r\n        </div>\r\n        <div className=\"card-footer border-secondary\">\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Song control\">\r\n                <button type=\"button\" className=\"btn btn-outline-danger\">\r\n                    <i className=\"fas fa-trash fa-2x\"></i>                        \r\n                </button>\r\n                <button onClick={editFunction} type=\"button\" className=\"btn btn-outline-success\">\r\n                    <i className=\"fas fa-edit fa-2x\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>{\r\n    (song.video !== null && song.video !== \"\") ? (\r\n        <div class=\"embed-responsive embed-responsive-16by9 mt-3\">\r\n        <iframe title={\"Music for the song \"+song.title} class=\"embed-responsive-item\" \r\n        src={`https://www.youtube-nocookie.com/embed/${song.video.split('=')[1]}`}>\r\n        </iframe>\r\n        </div>\r\n    ) : (\r\n        <React.Fragment>\r\n        <h1>There is no video attached! </h1>\r\n        <h2>Add one editing this song.</h2>\r\n        </React.Fragment>\r\n    )\r\n    }\r\n</div>\r\n  )} else {\r\n    return (\r\n<div className=\"container mt-3\" >\r\n<form className=\"card text-center\">\r\n    <div className=\"card-header bg-dark\">\r\n        <label htmlFor=\"songTitle\" className=\"text-center text-white lead\">Title</label>\r\n        <input className=\"form-control w-100\" placeholder=\"Introduce the new song's title\" \r\n        value={song.title} style={{ margin:\"0 auto\"}}\r\n        onChange={handleInputChange}\r\n        id=\"songTitle\" name=\"title\"\r\n        />\r\n    </div>\r\n    <div className=\"card-body\">\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"songLyrics\" className=\"card-title\">New lyrics:</label>\r\n            <textarea className=\"form-control card-text w-100\"\r\n                value={song.description}\r\n                style={{ margin:\"0 auto\" }} rows=\"5\"\r\n                placeholder=\"Add new lyrics or modify the existent!\"\r\n                onChange={handleInputChange}\r\n                id=\"songLyrics\" name=\"description\" \r\n            >\r\n            </textarea>\r\n        </div>\r\n        <div class=\"mb-2\">\r\n            <label for=\"musicVideo\" class=\"form-label\">Youtube video:</label>\r\n            <input type=\"url\" class=\"form-control\" name=\"video\" id=\"musicVideo\" \r\n            value={song.video}\r\n            onChange={handleInputChange}\r\n            placeholder=\"https://www.youtube.com/watch?v=bR6lbN40-Ho\"/>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <label for=\"musicSinger\" class=\"form-label\">Singer or band name:</label>\r\n            <input type=\"text\" class=\"form-control\" name=\"author\" id=\"musicSinger\" \r\n            value={song.author}\r\n            onChange={handleInputChange}\r\n            placeholder=\"The strokes\"/>\r\n        </div>\r\n        <div className=\"input-group w-100 mb-3\" style={{ margin:\"0 auto\" }}>\r\n            <label htmlFor=\"publisheOn\" className=\"input-group-text bg-dark text-white\" id=\"label-published\">Published on (yyyy-mm)</label>\r\n            <input type=\"month\" className=\"form-control\" \r\n            placeholder=\"Update the song release\" aria-describedby=\"label-published\"\r\n            id=\"publishedOn\" name=\"publishedOn\" \r\n            pattern=\"[0-9]{4}-[0-9]{2}\"\r\n            onChange={handleInputChange}\r\n            value={song.publishedOn}\r\n            />\r\n        </div>\r\n        <div className=\"input-group w-100 mb-3\" style={{ margin:\"0 auto\" }}>\r\n            <label htmlFor=\"duration\" className=\"input-group-text bg-dark text-white\" id=\"label-duration\">Duration (hh:mm:ss)</label>\r\n            <input type=\"text\" className=\"form-control\" \r\n            placeholder=\"Update the song duration\" aria-describedby=\"label-duration\"\r\n            id=\"duration\" name=\"duration\"\r\n            pattern=\"[0-9]?[0-9]?:?[0-9]?[0-9]:[0-9]{2}\"\r\n            onChange={handleInputChange}\r\n            value={song.duration}\r\n            />\r\n        </div>\r\n\r\n        </div>\r\n        <div className=\"card-footer border-secondary\">\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Song control\">\r\n                <button type=\"button\" onClick={editFunction} className=\"btn btn-outline-danger text-center d-flex fa-1x align-self-center\">\r\n                <i className=\"fas fa-undo d-flex align-self-center p-1\"></i>Cancel                        \r\n                </button>\r\n                <button type=\"button\" onClick={updateSong} className=\"btn btn-outline-primary text-center d-flex fa-1x align-self-center\">\r\n                <i className=\"fas fa-upload d-flex align-self-center p-1\"></i>Update                        \r\n                </button>\r\n            </div>\r\n        </div> \r\n</form>\r\n</div>\r\n  )}\r\n};\r\n\r\nexport default Card;","import {Component} from \"react\";\r\nimport SongsDataService from \"../services/Songs-Service\";\r\nimport Card from \"./Card\";\r\n\r\n/*\r\nhttps://stackoverflow.com/questions/23427384/get-form-data-in-reactjs\r\n*/\r\n\r\nexport default class Song extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.retrieveSong = this.retrieveSong.bind(this);\r\n        this.updateSong = this.updateSong.bind(this);\r\n        this.editSong = this.editSong.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            title: null,\r\n            description: null,\r\n            publishedOn: null,\r\n            duration: null,\r\n            video: null,\r\n            author: null,\r\n\r\n            edit:false,\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.retrieveSong(this.state.id);\r\n    }\r\n\r\n    updateSong(){\r\n        const data = {\r\n            id: this.state.id,\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            publishedOn: this.state.publishedOn,\r\n            duration: this.state.duration,\r\n            video: this.state.video,\r\n            author: this.state.author\r\n        }\r\n        SongsDataService.update(this.state.id,data).then((response) => {\r\n            console.log(\"La respuesta de la api:\")\r\n            console.log(response.data)\r\n        }).catch((e) => {\r\n            console.log(\"Valio, no se pudo actualizar\")\r\n            console.log(e)\r\n        }).finally(() =>{\r\n            this.retrieveSong(data.id)\r\n            this.setState({\r\n                edit:false\r\n            })\r\n        })\r\n\r\n        /*\r\n        \r\n        console.log(event.target[0].value)\r\n        console.log(event.target.elements.title.value)\r\n        console.log(event.target.title.value)\r\n        console.log(this.state.id)\r\n        */\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    \r\n    }\r\n\r\n    editSong(){\r\n        this.state.edit ? (\r\n            this.setState({\r\n                edit: false\r\n            })\r\n        ) : (\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        )\r\n    }\r\n\r\n    retrieveSong(id){\r\n        SongsDataService.get(id).then( response => {\r\n            this.setState({\r\n                id: response.data.id,\r\n                title: response.data.title,\r\n                description: response.data.description,\r\n                publishedOn: response.data.publishedOn,\r\n                duration: response.data.duration,\r\n                video: response.data.video,\r\n                author: response.data.author\r\n            });\r\n        }).catch(e => {\r\n            console.log(e);\r\n            console.log(\"No se encontro xd, poner a null lo demas\");\r\n            this.setState({\r\n                id: this.props.match.params.id,\r\n                title: null,\r\n                description: null,\r\n                publishedOn: null,\r\n                duration: null,\r\n                video: null,\r\n                author: null,\r\n\r\n                edit: false,\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let song = this.state;\r\n        return (\r\n        <div>\r\n        {\r\n           (song.title !== null) ? (\r\n               <Card edit={song.edit} song={song} handleInputChange={this.handleInputChange} \r\n               updateSong={this.updateSong} editFunction={this.editSong} />\r\n           ) : (\r\n               <h2>The song you request doesn't exist!</h2>\r\n           )\r\n        }\r\n        </div>\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBar extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Spreact!\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/songs\"} className=\"nav-link\">\r\n                  Songs\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/add\"} className=\"nav-link\">\r\n                  Add+\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          </nav>\r\n        )\r\n    }\r\n}\r\n\r\nclass Home extends Component{\r\n\r\n    componentDidMount(){\r\n        console.log(\"Cambiando el stylo del index\")\r\n        document.getElementById('root').className = 'bg-dark text-white';\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.getElementById('root').className = 'bg-white text-dark';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <main>\r\n            <section className=\"py-5 text-center container min-vh-100\">\r\n                <div className=\"row py-lg-5\">\r\n                    <div className=\"col-lg-6 col-md-8 mx-auto\">\r\n                        <h1 className=\"display-3 p-4\">Spreact</h1>\r\n                        <p className=\"lead p-0 m-0\">A karaoke like webapp done with React.js.\r\n                        You can add your favorite song's lyrics and the video associated with it.</p>\r\n                        <p className=\"lead p-4\">So you can sing while you listen to it!</p>\r\n                        <p className=\"lead p-0 m-0\">\r\n                            <Link to={\"/add\"} className=\"btn btn-outline-light text-center\">\r\n                            <i className=\"fas fa-plus d-flex align-self-center p-1\"></i>\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n        )\r\n    }\r\n} \r\n\r\nexport {NavBar, Home};","import React, { Component } from 'react';\r\nimport { Switch, Route, HashRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\nimport AddSong from './components/AddSong-Component';\r\nimport SongsList from './components/SongsList-Component';\r\nimport Song from './components/Song-Component';\r\nimport {Home, NavBar} from './components/Home';\r\n\r\n/* https://www.freecodecamp.org/espanol/news/npm-vs-npx-cual-es-la-diferencia/ \r\n  \r\n https://spring.io/guides/tutorials/react-and-spring-data-rest/\r\n https://bezkoder.com/react-crud-web-api/\r\n \r\n Deployment: \r\n https://www.freecodecamp.org/news/deploy-a-react-app-to-github-pages/\r\nhttps://create-react-app.dev/docs/deployment/#github-pages-https-pagesgithubcom\r\n*/\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <HashRouter>\r\n          <Route exact path={[\"/\",\"/home\"]} >\r\n              <Home />\r\n          </Route>\r\n          <Route exact path=\"/songs\" component={SongsList} />\r\n          <Route exact path=\"/add\" component={AddSong} />\r\n          <Route path=\"/songs/:id\" component={Song} />\r\n        </HashRouter>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/Sproner-React\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}